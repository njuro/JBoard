package com.github.njuro.jard.post;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.github.njuro.jard.attachment.Attachment;
import com.github.njuro.jard.board.Board;
import com.github.njuro.jard.thread.Thread;
import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.UUID;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/** Entity representing a post in thread. */
@Entity
@Table(name = "posts")
@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@ToString(onlyExplicitlyIncluded = true)
public class Post implements Serializable {

  private static final long serialVersionUID = 5654328565108212395L;

  /** Unique identifier of this post. */
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  @Column(updatable = false)
  @JsonIgnore
  private UUID id;

  /** Number identifier of this post - generated by {@link Board} it belongs to. */
  @Basic
  @Column(nullable = false)
  @EqualsAndHashCode.Include
  @ToString.Include
  private Long postNumber;

  /** (Optional) name of the poster. */
  @Basic @ToString.Include private String name;

  /** (Optional) hashed password of the poster. Used to prove identity across different post. */
  @Basic private String tripcode;

  /** Body of the post. */
  @Basic
  @Column(columnDefinition = "TEXT")
  private String body;

  /** Date and time when this post was created. */
  @Column(nullable = false)
  private OffsetDateTime createdAt;

  /** IP of the poster. */
  @Basic
  @Column(nullable = false)
  private String ip;

  /** Sage means the post will not bump the thread. Applies only to replies (not original posts). */
  @Basic private boolean sage;

  /** {@link Thread} this post belongs to. */
  @ManyToOne(targetEntity = Thread.class, fetch = FetchType.EAGER)
  @EqualsAndHashCode.Include
  private Thread thread;

  /** (Optional) attachment uploaded with this post. */
  @OneToOne(targetEntity = Attachment.class, fetch = FetchType.EAGER, cascade = CascadeType.ALL)
  @Fetch(FetchMode.JOIN)
  private Attachment attachment;

  /** Before inserting to database, set creation date to current date and time. */
  @PrePersist
  private void setCreatedAt() {
    createdAt = OffsetDateTime.now();
  }
}
